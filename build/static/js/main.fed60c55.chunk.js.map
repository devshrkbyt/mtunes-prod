{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Context","React","createContext","reducer","state","action","type","track_list","payload","heading","Provider","dispatch","setState","axios","get","process","then","res","data","message","body","catch","err","console","log","value","this","props","children","Component","Consumer","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","to","track_id","Tracks","undefined","length","Spinner","Fragment","map","item","key","Search","trackTitle","findTrack","e","preventDefault","onChange","target","name","onSubmit","bind","placeholder","Index","Lyrics","lyrics","match","params","id","Object","keys","lyrics_body","explicit","track_rating","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fed60c55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.cfac0d31.gif\";","import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-info mb-5\">\r\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">M Tunes</span>   \r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;  ","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext() \r\nconst reducer = (state,action)=> {\r\nswitch(action.type ){\r\n    case 'SEARCH_TRACKS':\r\n    return {\r\n        ...state,\r\n        track_list:action.payload,\r\n        heading:\r\n        'Search Results'\r\n    };\r\n    default:\r\n            return state;\r\n}\r\n}    \r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        track_list: [],\r\n        heading: 'Top 10 Tracks',\r\n        dispatch: action => this.setState(state=> reducer(state,action))\r\n    };\r\n    \r\n    componentDidMount() {\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY\r\n        }`)\r\n   .then(res=> {\r\n       \r\n        this.setState({track_list: res.data.message.body.track_list});\r\n   })\r\n   .catch(err=> console.log(err)) ;\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer;","import React from   'react';\r\nimport spinner  from './spinner.gif'; \r\n\r\nexport default () => {\r\nreturn (\r\n<div>\r\n    <img\r\n        src={spinner}\r\n        alt=\"Loading...\"\r\n        style={{width: '200px', margin: '40px auto',display: 'block'}}\r\n        />\r\n</div>\r\n\r\n);\r\n};","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nconst Track = (props) => {\r\n    const {track} = props ;\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"card mb-4 shadow-sm\">\r\n                <div className=\"card-body\">\r\n                    <h5>{track.artist_name}</h5>\r\n                    <p className=\"Ã§ard-text\">\r\n                         <strong><i className=\"fas fa-play\">\r\n                            </i>Track</strong>: {track.track_name}\r\n                                <br/>\r\n                                    <strong><i className=\"fas fa-compact-disk\">\r\n                            </i>Album</strong>: {track.album_name}\r\n                    </p>\r\n                        \r\n\r\n                    <Link to={`lyrics/track/${track.track_id}`}\r\n                    className=\"btn btn-info btn-block\"\r\n                    >\r\n                        <i className=\"fas fa-chevron-right\"></i>View Lyrics\r\n\r\n                    </Link>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Track;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport Spinner from '../layout/Spinner';\r\nimport Track from '../tracks/Track';\r\n\r\n\r\nclass Tracks extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { track_list,heading}= value;\r\n                    if(track_list===undefined||track_list.length===0)\r\n                { \r\n                    return <Spinner />\r\n\r\n                }else{\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                                    <div className=\"row\">\r\n                                        {track_list.map(item => (\r\n                            <Track key={item.track.track_id} track={item.track}/>\r\n                            ))}\r\n                        </div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Tracks;","import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport { Consumer } from '../../context'\r\n\r\n\r\n class Search extends Component {\r\n   state = {\r\n\r\n    trackTitle: ''\r\n   }; \r\n\r\n   findTrack = (dispatch, e) => {e.preventDefault();\r\n\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_MM_KEY\r\n        }`\r\n    )\r\n   \r\n    .then(res=> {\r\n       dispatch ({\r\n           type: 'SEARCH_TRACKS',\r\n           payload: res.data.message.body.track_list\r\n        });\r\n        this.setState({ trackTitle:''});\r\n      })\r\n   \r\n   .catch(err=> console.log(err)) ;\r\n\r\n};\r\n   \r\n   onChange = e => {\r\n       this.setState({ [e.target.name]: e.target.value });\r\n   };\r\n   \r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value=> {\r\n                    const { dispatch} = value; \r\n                    return (\r\n                        <div className=\"card card-body mb-4 p-4\">\r\n                            <h1 className=\"display-4 text-center\">\r\n                                <i className=\"fas fa-music\"></i>Search For A Song\r\n                            </h1>\r\n                            <p className=\"lead text-center\">Get the Lyrics for any song</p>\r\n                            <form onSubmit={this.findTrack.bind(this,dispatch)}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Song title...\"\r\n                                        name=\"trackTitle\"\r\n                                        value={this.state.trackTitle}\r\n                                        onChange={this.onChange} \r\n                                    />\r\n                                </div>\r\n                                <button className=\"btn btn-primary btn-lg btn-block mb-5\" type= \"submit\"> Get Tack Lyrics</button>\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Search;","import React from 'react'\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/Search'\r\n\r\nconst Index = () => {\r\n    return (\r\n        <React.Fragment>\r\n         <Search />\r\n         <Tracks />  \r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Index\r\n\r\n","import React, { Component } from 'react'\r\nimport  axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\n\r\n\r\n class Lyrics extends Component {\r\n    state = {\r\n        track: {},\r\n        lyrics:{}\r\n    };\r\n componentDidMount(){\r\n    axios\r\n        .get(\r\n            `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY\r\n        }`\r\n        \r\n    )\r\n    \r\n   .then(res=> {\r\n       console.log(res.data)\r\n         this.setState({lyrics:res.data.message.body.lyrics });\r\n\r\n        return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n   })\r\n    .then(res => {\r\n        console.log(res.data)\r\n        this.setState({track:res.data.message.body.track });\r\n    })\r\n   .catch(err=> console.log(err));\r\n\r\n }\r\n    \r\n    render() {\r\n        const { track,lyrics } = this.state;\r\n        \r\n        if (\r\n            track=== undefined || \r\n            lyrics === undefined ||\r\n            Object.keys(track).length === 0 ||\r\n            Object.keys(lyrics).length === 0\r\n                ) {\r\n            return <Spinner /> ;\r\n\r\n             } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to =\"/\" className=\"btn btn-info btn-sm mb-4\">Go Back</Link>\r\n                    <div className=\"card\">\r\n                        <h5 className=\"card-header\">\r\n                            {track.track_name} by {` `} \r\n                            <span className=\"text-secondary\">{track.artist_name}</span>\r\n                            </h5>\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">{lyrics.lyrics_body}</p>\r\n                         </div>\r\n                    </div>\r\n\r\n                    <ul className=\"list-group mt-3\">\r\n                        <li className=\"list-group-item\">\r\n                            <strong> Album Name</strong>: {track.album_name}\r\n                    </li>\r\n                      \r\n                        <li className=\"list-group-item\">\r\n                        <strong>Explicit Words</strong>:{` `}\r\n                        {track.explicit === 0 ? 'No' : 'Yes'}\r\n                    </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Track Rating</strong>: {track.track_rating}\r\n                        </li>\r\n\r\n                    </ul>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        \r\n      \r\n    }\r\n}\r\n\r\nexport default Lyrics\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Lyrics from './components/tracks/Lyrics';\n\n\n\n\nimport {Provider} from './context';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n          <Router>\n            <React.Fragment>\n                <Navbar />\n                  <div className=\"container\">\n                      <Switch>\n            <Route exact path =\"/\" component={Index} />\n            <Route exact path =\"/lyrics/track/:id\" component={Lyrics} />\n        </Switch>\n      </div> \n    </React.Fragment>\n    </Router>\n    </Provider>\n  \n     );\n  }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}